Other:
    * Examples worked in the form of public juypyter notebooks
    * All datasets will be public, released in standard format (pcapng)
    * Datasets will correspond to "nprintML" benchmarks as a standard 

1. Introduction - The Quest for Networks that Learn
    * History: 
        * DARPA IDS challenge, spam filters, …
        * From signatures to statistical classification/detection
        * Offline detection algorithms: traffic classification, botnet detection, …
        * Breakthroughs: Programmable telemetry, ML libraries, automated ML
    * Why ML for networking?
        * History: Systems could be modeled in closed form.
        * Mid-2000s: Closed-form modeling of complex systems (for security, prediction, etc.)
    * What you will learn …

2. Motivating Problems and Examples
    * Existing problems in networking where machine learning has/could be applied
    * Problem areas:
        * Security
            * DoS Detection
            * Botnets
            * Malware
            * ...
        * Performance
            * QoE Estimation
            * ...
        * Management
            * (Auto)-Configuration
            * Software-Defined/Self-Driving Networks

3. Network Traffic Measurement
    * Active measurement
        * ping, traceroute, …
        * application-level probes and meausrement
    * Passive measurement
        * conventional: pcap, NetFlow, …
        * emerging: P4, NetFPGA-based, PF_RING, etc. …
    * Basic analysis
        * from traffic to wireshark
        * from packets to pandas/dataframes

4. Supervised Learning
    * Linear Models
        * Linear Regression (example: packets/bytes)
        * Logistic Regression (example: DNS query/response)
        * Support Vector Machines
    * Tree-Based Models (decision trees)
    * Kernel Methods
    * Ensemble Learning
        * Bagging/Bootstrapping (random forest) (example: spam filtering)
        * Boosting
    * Deep Learning

5. Unsupervised Learning
    * Goals: 
        * Anomaly Detection
        * Dimensionality Reduction
        * Visualization
    * Principal Components Analysis (application: outlier detection on network traffic)
    * NetML outlier detection python framework (https://pypi.org/project/netml/)

6. Machine Learning Pipelines for Networking
    * Data gathering (including how much)
    * Data Representation (https://nprint.github.io/nprint/)
    * Automated ML Pipelines (e.g., AutoGluon, AutoML, …)
    * Programmable Telemetry

7. Privacy, Legal, Ethical Concerns
    * Data
        * Data collection and retention
        * Data sharing, model sharing
    * Privacy
        * Privacy frameworks
        * Privacy laws

8. Looking Ahead (Also submit version to Hotnets?)
